// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
   binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User{
  id Int @id @default(autoincrement())
  username String @unique 
  password String? @default("")
  role Role @default(USER)
  // userSetting UserSetting?
  // posts Post[]
  // groupPosts UserOnGroupPosts[]
  
}




enum Role{
USER
SUPERADMIN
}


// model UserSetting{
//     id Int @id @default(autoincrement())
//     notificationsOn Boolean
//     smsEnabled Boolean
//     user User @relation(fields: [userId],references: [id])
//     userId Int @unique


// }


model Post{
    id Int @id @default(autoincrement())
    title String 
    description String
    createdAt DateTime @default(now())
    comment Comment[]
    // user User @relation(fields: [userId], references: [id])
    // userId Int
    
}



model Comment{
id Int @default(autoincrement()) @id
content String
createdAt DateTime @default(now())
postId Int 
post Post @relation(fields: [postId],references: [id])

}























// model GroupPost{
// id Int @default(autoincrement()) @id
// title String
// descrition String
// users UserOnGroupPosts[]
// }


// model UserOnGroupPosts{

// user User @relation(fields:[userId],references: [id])
// userId Int
// groupPost GroupPost @relation(fields: [groupPostId], references: [id])
// groupPostId Int
// @@id([userId,groupPostId])


// }